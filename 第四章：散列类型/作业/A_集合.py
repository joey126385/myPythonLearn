# 散列类型？  ----- 没有顺序的一列数据数据这样的类型
"""
什么是集合？
    概念：有一个或多个无序且不重复的元素所构成的整体叫做集合。
    表示形式： 在Python中集合用 {} 标识
    专有名词： set
    注意：在Python中集合 属于是 可变数据类型 ，python提供的集合的操作方法是可以直接对源数据进行修改的

拓展：什么是有序？什么是无序？
    在Python中有序的数据，是有下标的，能够通过下标进行取值或者修改操作
    在Python中无序的数据，是没有下标。
"""

# 一、创建集合：
# 语法 ： 变量 = {值1,值2,值3}
# 注意：创建空集合的时候，有个特特点,直接写一个{}是字典，得用set()去创建空集合




# 二、集合有特性（Python官方规定的）
# * 唯一性 ： 集合中元素是唯一的，有多个值时会自动去重。
# 无序性 : 集合创建，在进行存值的时候，是无序存储。 集合中元素是无序的，不能用索引取值和切片。
# 确定性 : 集合中的元素不能是可变数据类型，即使是孙子元素也不行。



# 三、集合运算  （虽然集合用的少，但是如果搞数学的话说不定会接触到）
# & 交  得出集合 相交部分( shift+7 = & )
# | 并  合并集合元素，并去重 (shift+\ = |)
# - 差 得出 -前面集合 减去 -后面集合 后所剩元素



# 四、集合的操作方法（不需要背）
# 注意：在Python中集合 属于是 可变数据类型 ，python提供的集合的操作方法是可以直接对源数据进行修改的
"""增加：
语法： .add(元素) 用于追加元素，但是追究的位置不固定，可变数据类型的新增一般没有返回值
"""
ins_set = {"张三","李四","王五"}
# 练习：请往集合中追加一个新的 员工 名称

"""删除：
1、随机删除
    语法： .pop() 由于集合没有顺序，所以是随机删除一个元素
2、指定删除
    语法： .remove(元素) 用于删除指定元素
"""
del_set1 = {"软件开发工程师", "前端工程师", "测试工程师", "架构师"}
# 练习1 ： 请随机删除一个岗位数据

del_set2 = {"市场经理", "营销专员", "产品经理", "数据分析师"}
# 练习2 ： 请删除 "营销专员"


"""修改
语法： .update(序列类型)   将序列对象中的元素添加到集合中,非序列元素会引发TypeError类型的错误
"""
#
upd_set = {"软件工程师", "数据分析师", "产品经理", "前端开发者", "后端开发者"}
upd_list = ["UI设计师", "测试工程师", "市场专员", "销售经理", "项目经理"]
# 练习：请将 upd_list 中的岗位信息一次性添加到 upd_set 岗位集合中



"""查询
语法： 集合1.isdisjoint(集合2)     用于查询集合之间是否有相交部分，如果说有的话返回 Flase  如果 没有 则返回 True
"""
sel_set1 = {"张三", "李四", "王五", "赵六", "孙七"}
sel_set2 = {"陈八", "周九", "吴十", "郑十一", "刘十二"}
# 练习： 现有两个存储了员工姓名的集合，请检查两个集合中是否有重合的 员工





"""
拓展： 数据类型之间是可以进行互相转换的！！！！！
    语法： 数据类型关键词(数据)
    注意：数据类型转换不能瞎转,比如列表转数字。
    总结：序列类型不能转数值类型，一定是要在符号数据不丢失的前提进行转换。
"""

# 拓展，集合去重的应用：
# 需求：现在有一个用户系统，系统中每个用户的城市信息储存在列表中，现在要统计有哪些城市，但是重复的不统计。
cities = ["北京", "上海", "广州", "深圳", "成都", "北京", "杭州", "南京", "上海", "重庆", "深圳"]
# 通过集合的特性进行去重
# 1、将列表转集合(set)

# 2、将去重的数据再转回列表(list)


