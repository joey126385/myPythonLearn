# 散列类型？  ----- 没有顺序的一列数据数据这样的类型
"""
什么是字典？
    概念：以键值对的方式存储数据的无序*可变*散列数据
    专有名词： dict
"""

# 一、字典的创建：  { 键:值, 键:值, ....}   键类似于索引是对于值的特殊标识


# 二、字典的特点： 键唯一，值不唯一【理解：索引是唯一的，但是索引对应的值是可以重复的】
# 键一般是唯一的，如果重复最后的一个键值对会替换前面的，值不需要唯一。



# 三、字典的操作方法

""" 新增：
语法： .setdefault(键,值)  无则增,有则查
注意：.setdefault(键,值) 确实是用于新增新键值对的，但是如果新增的键在之前的字典中存在，那么这个方法就会变成查询方法，会根据键查询
"""
ins_dict = {"姓名":"不渝","年龄":18}
# 练习：往这个字典中,增加 一个新的 城市 键值对







"""  删除：
1、清空字典
    语法： .clear()
2、根据指定的键删除对应的键值对数据
    语法： .pop(键)
3、删除最后一个键值对
    .popitem()  删除最后一个键值对，用的较少
"""
del_dict1 = {"姓名":"不渝","年龄":18}
# 练习1: 要求清空这个列表


del_dict2 = {"姓名":"不渝","年龄":18}
# 练习2: 要求删除 "年龄":18 键值对


del_dict3 = {"姓名":"不渝","年龄":18,"城市":"长沙"}
# 练习3: 要求删除 "城市":"长沙" 键值对，即最后这个键值对







""" 修改：
根据新字典去修改旧字典
    语法：旧字典.update(新字典)   
    新字典的 键 若在旧字典中，则修改对应 值; 新字典的 键 若不在旧字典中，则新增键值对。
"""
upd_dict1 = {"姓名":"不渝","年龄":18,"爱好":"干饭"}      # 旧字典
upd_dict2 = {"姓名":"林里","年龄":8,"城市":"广州"}       #新字典
# 练习: 请依据新字典去修改旧字典







""" 查询：
1、查指定key值
    语法1：.get(键)   获取指定key对应的 值 ; 若不存在则返回None
    语法2：字典名[键]   获取指定key对应的 值 ; 若不存在则报错KeyError
    
2、查所有的key
    语法： .keys()  查询字典中所有的key,返回类似列表的key对象
    
3、查所有的值
    语法： .values()  查询字典中所有的值 ,返回类似列表的 值对象

4、查键值对
    语法： .items()   查询出所有的键值对,返回一个看起来像列表的 元组列表对象
"""
sel_dict = {"姓名":"林里","年龄":18,"城市":"广州"}


