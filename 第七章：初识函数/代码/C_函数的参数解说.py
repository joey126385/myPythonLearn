"""
函数参数有四种形式： 必备位置参数、默认位置参数、不定长参数（存为元组）、关键字不定长参数（存为字典）
"""

# 思考：print打印函数自动具备换行功能，为何会自动具备呢？


"""
一、必备参数（位置参数）
创建函数的时候，设定了一定要填的参数叫做必备参数（也叫做必备位置参数）
"""
# wen_du,time 他们就是位置参数、也叫必备参数，在使用的时候，一定要给他们传值，不传会报错
def kong_tiao(wen_du,time):
    # 用打印语句模拟空调使用
    print(f"空调开启，当前温度{wen_du}摄氏度,空调开启{time}小时后，将自动关闭")

kong_tiao(22,8)




"""
二、默认参数
创建函数的时候，如果我给设定的参数赋予了一个默认值，它就变成默认参数了，可以传参也可以不传
"""
# 这个函数实现的功能是，打印当前用户账户的，去打印一个欢迎词
def reg(user_name,le="普通"):
    """
    欢迎用户的函数
    :参数1 user_name: 要填欢迎的用户名称
    :参数2 le: 它是一个默认参数，可以填可以不填，如果在使用的时候不填值的话默认为普通用户
    :return:
    """
    print(f"欢迎{le}用户{user_name}进入系统！")

reg("不渝","会员")


"""
三、不定长参数
有些情况，我可能在制作函数的时候不清楚，有多少个参数，那怎么创建函数？
python 提供了一个不定长参数给我们使用
不定长参数： *args 这样表示，它的功能是接受用户调用函数时，传进来的无法被其他位置参数接受的多余的值，容纳后汇总为一个元组进行存储
"""

def test(a,b,c="我是默认参数",*args):
    print(f"必备参数：{a},{b}")
    print(f"默认参数：{c}")
    print(f"不定长参数: {args}")

test("不渝",1024,"今天天气正好",1314,520)

# 当我们在创建一个函数的时候，我们不确定用户会传多少个值，但是我又不希望发生，用户传值过多报错的情况，这个时候就可以使用不定长参数


"""
四、关键字不定长参数
常规写法：**kwargs
python 也提供了关键字不定长参数，这个参数用于接收 变量=值 这样格式的数据，存为字典，变量名存为字典键，对应的值存为键对应值。
关键字不定长单词可以用来设置配置信息，在后面的课程中，会用到它。
"""
# args 和 kwargs 这两个名字是程序员习惯用的，一般不建议改

def testttt(a,b,c="我是默认参数",*args,**kwargs):
    print(f"必备参数：{a},{b}")
    print(f"默认参数：{c}")
    print(f"不定长参数: {args}")
    print(f"关键字不定长参数：{kwargs}")

# 调用
testttt("不渝",1024,"今天天气正好",1314,520,url="www.baidu.com",path="d://pythonWork")


# 今天的函数参数解说只是让你们去认识有哪几种参数，其实一般情况下，只用最普通的位置必备参数