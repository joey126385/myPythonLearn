
# 在执行 while 循环或者 for 循环时，只要循环条件满足，程序将会一直执行循环体，不停地转圈。

# 但在某些场景，我们可能希望在循环结束前就强制结束循环。Python 提供了 2 种强制离开当前循环体的办法：
# 1、使用 continue 语句，可以跳过执行本次循环体中剩余的代码，转而执行下一次的循环。
# 2、只用 break 语句，可以完全终止当前循环。


"""
拓展函数：
strip()函数是python中内置函数的一部分。 该函数将从原始字符串的开头和结尾删除给定的字符。
默认情况下，函数strip()将删除字符串开头和结尾的空格，并返回前后不带空格的相同字符串。
"""
# 人工智障案例，请在以下代码的基础上叠加无限使用循环,并且实现,输入666就退出循环，输入888就暂停一次循环

# while True:
#     p=input("请输入你的问题：")
#     if p == "666":
#         break    # 退出循环
#     if p == "888":
#         continue   # 暂停一次循环
#     an=p.strip("你吗?？!")
#     print("机器人的回答："+an)

# 在代码中，所有的代码要么是平级关系，要么是包含关系


# 总结：其实只要是代码逻辑没有问题，一样的效果能够实现的方式还是有很多的







"""
# 输入666就退出循环，输入888就暂停一次循环
while True:
    c = input("请输入同学成绩：")
    cc = int(c)    #进行数据类型转换，转成int整数类型
    if cc < 60 :
        print("好遗憾呀，你不及格诶~")
    elif cc>=60 and cc<=80:
        print("不错不错的，成绩良好，仍需继续加油哦！")
    elif cc > 80 and cc<=100 :
        print("你很优秀哦，要继续保持！")
    elif cc == 666:
        print("退出循环！")
        break
    elif cc == 888:
        print("跳过本次循环！")
        continue
    else :
        print("你的成绩有点诡异，请重新输入进行验证！")
        
        
        
"""



"""
常见问题：
1、打印语句不要放break和continue后面哦~ 这样是没有意义的，退出或者终止循环后，当前循环就结束了，执行不到接下来的打印。
2、代码缩进不同等级也不同
3、代码顺序不同，结果也不同
"""




"""
# 打印1-10
i = 1     # 设定初始值
while i < 11:      # 写循环条件，只要 变量i中数据小于11就一直循环
    print(i)
    i = i + 1  # 让循环中的变化发生变化，以至于循环不会死循环

# 代码是具有执行顺序，从上往下执行
"""





"""
# 输入Q就退出循环，输入E就暂停一次循环
while True:
    c = input("请输入同学成绩(Q退出，E跳过一次，其他字符会报错)：")
    if c == "Q":
        break
    elif c == "E":
        continue
    else:
        cc = int(c)    #进行数据类型转换，转成int整数类型
        if cc < 60 :
            print("好遗憾呀，你不及格诶~")
        elif cc>=60 and cc<=80:
            print("不错不错的，成绩良好，仍需继续加油哦！")
        elif cc > 80 and cc<=100 :
            print("你很优秀哦，要继续保持！")
        else :
            print("你的成绩有点诡异，请重新输入进行验证！")
"""