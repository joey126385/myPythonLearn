"""
一、如何对媒体文件（图片、视频、音频）进行操作？
rb 二进制只读、 wb二进制只写、 ab二进制追加

二、详细介绍？
"rb"：以二进制模式读取文件。如果文件存在则马上打开，如果文件不存在则报错。
"wb"：以二进制模式写入文件。文件不存在，会自己创建；文件已经存在，会覆盖原文件。
"ab"：以二进制模式追加数据到文件末尾。文件存在则直接追加到之前的数据后面。文件不存在则创建一个文件并将数据写入。
"""
# ./歌曲素材/月光--胡彦斌.mp3
# ./代表当前文件旁边，就是当前所在的文件，即 “C_媒体文件操作.py”
# ./歌曲素材 代表当前“C_媒体文件操作.py”文件旁边的“歌曲素材文件夹”
# ./歌曲素材/月光--胡彦斌.mp3    代表当前“C_媒体文件操作.py”文件旁边的“歌曲素材文件夹”当中的“月光--胡彦斌.mp3”


# 【练习】：实现一个歌曲串烧功能（歌曲串烧指的是将多首歌曲进行拼接）
# 前置条件：在当前代码旁边准备好歌曲资源，目前我已经在代码旁边准备好了一个"歌曲素材"文件夹，里面有很多歌曲。

# 思路分析：
# 1、读取一首歌曲的数据，“rb”读取
with open("./歌曲素材/月光--胡彦斌.mp3","rb")as f:
    music1 = f.read()
print(music1)   # 测试是否读取到信息

# 2、通过“wb”模式帮助我们创建一个空白歌曲文件，将刚刚读取的数据保存到新文件中。
with open("./歌曲素材/串烧歌曲.mp3","wb")as f:
    f.write(music1)

# 3、再次读取另一首歌曲信息
with open("./歌曲素材/推开世界的门--杨乃文.mp3","rb")as f:
    music2 = f.read()
print(music2)   # 测试是否读取到信息

# 4、以追加的方式，将歌曲信息追加到，第2步创建的歌曲文件中。
with open("./歌曲素材/串烧歌曲.mp3","ab")as f:
    f.write(music2)

# 今天的这个案例是为了讲解三种媒体文件的操作方式，本身不具备太大的商业价值与实用价值。

