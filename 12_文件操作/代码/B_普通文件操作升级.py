"""
什么是上下文管理？
在Python中，上下文管理器是一种用于管理资源（例如文件或网络连接）的机制，它能够确保这些资源在不再需要时被正确地释放或关闭。
通常情况下，上下文管理器被使用在with语句中，这样在进入和退出代码块时，就会自动地执行相关的操作。

上下文管理文件读写语法：
with open(文件,文件打开模式,编码格式)as 变量名:
    变量名.文件操作

filename 是文件的路径和名称，
mode 是文件的打开模式，
file 是文件对象

"""
# 相对路径 “./我的第一个文件.txt” 的解说：
# 在当前页面 . 代表 “B_普通文件操作升级.py”
# ./ 代表当前页面“B_普通文件操作升级.py” 文件旁边

"""
a+ : 打开文件并允许更新（可读可写），
     如果文件已存在，文件指针会指向文件尾部，
     将内容追加在原文件后面，如果文件不存在，则会新建文件且写入内容
"""
# 待会用于进行追加的内容
msg = "\n\n\n锄禾日当午，汗滴禾下土。\n谁知盘中餐，粒粒皆辛苦。"
# 通过上下文管理功能，以a+模式，打开当前文件旁边的“我的第一个文件.txt”，打开的过程中是遵循UTF-8编码的
with open("./我的第一个文件.txt","a+",encoding="UTF-8")as f:
    print(f"当前光标位置1：{f.tell()}")
    f.write(msg)
    print(f"当前光标位置2：{f.tell()}")
    # 在追加完信息后，要求将文件中的所有数据读取出来并打印
    # 调整光标位置
    f.seek(0)
    # 打印读取内容
    print(f.read())

"""
总结：
1、文件操作函数：open(文件,模式,编码)
2、只读：r 
3、只写：w
4、追加：a
5、追加+读取：a+
6、写入+读取：w+
7、读取+写入：r+
"""