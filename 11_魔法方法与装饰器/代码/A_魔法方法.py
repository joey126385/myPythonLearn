"""
一、什么是魔法方法？
1、魔法方法名前后都有两个下划线 __init__ 、__new__ 、__del__ 、__str__
2、无需自己手动调用,它会自动执行。

二、魔法方法学习目标？
认识什么是魔法方法，并且认识几个常见的魔法方法。

三、常见的魔法方法？
__init__()    初始化方法,用来初始化当前实例对象属性值。
__new__()     【了解】构造方法,用来构造创建一个实例对象的，python 规定 new 返回一个对象。当创建对象的时候，Python会自动帮助我们调用。
__str__()     当打印对象的时候返回 对象的字符串内容（自定义）。
__del__()     析构方法,在对象被销毁的自动调用。del本身不具备垃圾回收功能，它是会自动被调用的一个方法而已。

四、一个类在实例化对象时，Python做了什么？ 【了解】
1、Python会调用该类中的new方法去创建一个对象
2、python会调用该类中的init方法，获取刚刚new创建的对象,并进行初始化。
3、最终，init方法会返回创建好的，且初始化好的对象让程序员进行保存。

注意：一般情况下，在实际开发中，不需要重写new方法。这里只是因为要解析Python创建对象的本质，以及介绍Object类所以才重写了一下进行展示。

"""
# 了解：Object是基础类。python中规定Object是所有类的父类,当我们在声明类的时候，即使()中不填任何内容，python会自动帮我们继承它。

# 魔法方法解说：
class Cat():        # 类名后面()中若没有指定父类的话，python会自动给我们继承Object
    # __new__()     构造方法,用来构造创建一个实例对象的，python 规定 new 返回一个对象。当创建对象的时候，Python会自动帮助我们调用。
    def __new__(cls,*args):         # 【私有】重写new方法,cls是类的意思，代表当前类，因为当new被执行之前，对象是不存在的，所以不能用slef
        print("我是new方法")
        # 注意：new方法一定要返回一个对象
        # 由于创建对象的功能，我们自己是没有的，所以还是需要借用object中的new去创建
        return object.__new__(cls)   # 这个是调用object类中new创建对象的固定写法

    # __init__()    初始化方法,用来初始化当前实例对象属性值,我们需要在创建对象的时候，传递属性值。
    def __init__(self,name,age):     # 对象被创建好后，方法中都是self，self代表对象本身
        self.name = name
        self.age = age
        print("我是init方法")

    # __str__()     当打印对象的时候返回 对象的字符串内容（自定义）。
    def __str__(self):
        s = f"这是一只猫猫，名叫：{self.name}，今年{self.age}岁了。"
        return s

    # __del__()     析构方法,在对象被销毁的自动调用。del本身不具备垃圾回收功能，它是会自动被调用的一个方法而已。
    def __del__(self):
        print("我是析构方法，通常是在对象被清理的时候会自动调用。")
        print("通常是在析构方法中，写一些关闭链接，或者关闭文件操作，关闭资源这样的代码。")

# 实例化
c1 = Cat("招财",3)
print(c1)       # 测试代码，如果打印的是对象内层地址则证明：对象创建成功
# 优化：在打印对象的时候，返回一些该对象的信息或者介绍

input()   # 是用于接受用户输入的内容，一定要用户输入完，这个指令才会执行结束。某些情况下我们去测试代码的时候会用到input去阻塞程序，让其暂时不运行接受。




# 思考：对象是如何根据类创建的呢？ 是什么代码导致对象别创建的呢？
# 答：由于当前类继承了Object类，在Object类当中有一个Python给我们提供的创建对象的new方法
# 测试：是不是实例化对象的时候，Cat类会自动调用，继承的Object类中的new方法？



