"""
一、为什么要创建对象？什么是面向对象？
     类只是一种程序内的“设计图纸”，需要基于图纸生产实体(对象)，才能正常工作，这种套路称之为：面向对象编程

二、什么是面向对象？
    即，设计类，并基于类创建对象，并使用对象完成具体的工作，这样的一个编程方式叫做面向对象编程。

三、注意：
    面向对象是一个编程思想。
"""

# 【练习】：
# 实现  闹钟类 ( Clock )
# 行为： 响铃
class Clock():
    # 属性： 编号(ID)、价格(price)
    ID = None
    price = None
    # 行为： 响铃
    def bell(self):
        import winsound
        winsound.Beep(440, 3000)

# 由于类是一个模版，要用他得创建一个对象
c1 = Clock()     # 创建了第一个闹钟对象
# 给刚刚生产好的闹钟去设置编号和价格
c1.ID = 1
c1.price = 6999
# 测试当前闹钟的属性有没有问题
print(c1.ID,c1.price)
# 测试闹钟的功能
c1.bell()

# 一个类模版可以创建无数个对象，每一个对象都具备类中属性和行为，这样可以简化代码
# 创建第二个闹钟
c2 = Clock()
# 设置第二个闹钟的属性
c2.ID = 2
c2.price = 100
# 测试刚刚设置好的属性，测试对象的闹钟功能
print(f"闹钟的编号{c2.ID},闹钟的价格{c2.price}")
# f修饰字符串是第三节课学习的格式化输出
c2.bell()

"""
素材代码：【实现window电脑的响铃功能】
import winsound
# 生成一个频率为440赫兹（A4音符）的声音，持续1000毫秒（1秒）  
winsound.Beep(440, 1000)

# Beep函数解析：
        在Python的winsound模块中，Beep()函数用于在Windows操作系统上生成一个简单的声音（通常是一个蜂鸣声或哔哔声）。
        这个函数可以接收两个可选的参数来指定声音的频率和持续时间。
"""

# list  列表关键词，在Python底层是一个类，这个类具有很多的方法，比如 append、extend、pop

