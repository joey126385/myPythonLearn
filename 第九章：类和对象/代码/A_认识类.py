"""
一、什么是类？
具有共同的属性和行为的一个划分。

二、如何创建类?
类定义语法：
class  类名():
    属性 (在代码中属性用变量表示)
    行为 (在代码中行为用函数表示)


疑问：当我在创建行为函数的时候，写完函数名，开始写参数类别的时候，pc软件会自动给我快捷键出来self参数？
 注意：self 是我们在创建类行为时候的一个固定写法，他代表这个类对象本身。
      Python中规定，在类中如果要调用自身的属性和行为，必须通过self去进行调用

    不管是 属性、类变量、成员变量，都指的是写在类中的变量。
    不管是 行为、类方法、成员方法，都指的是写在类中的函数。

注意：
1、类名取名和变量名基本一致，只能由字母数字下划线和中文组成，不能以数字开头、不建议以下划线开头、不建议用中文，但是首字母建议大写
2、类方法中一定会具备一个参数self

"""

# 【举例】：
# 学生类 ( Students )
class Students():
    # 属性（类变量/成员变量）：学号（ID）、姓名（name）
    ID = None      # 为什么属性的初始值是 None ? 因为当前我们是创建一个类，这个类在编程中类似于模版
    name = None
    # 行为（类方法/成员方法）：学习、睡觉
    def study(self,time):
        print(f"正在学习中，{time}分钟后下课")
    # 注意：创建类方法的时候，self是自动有的，且一定要有
    def sleep(self):
        print("进入梦乡。")

# 类创建好，其实只是创建好了一个模版，这个模版是能够帮助我们减少代码量，规范代码
# 如果希望类产生作用，我们需要根据类去创建一个对象，然后去使用这个对象。

# 类如何使用？
s1 = Students()
print(s1)     # <__main__.Students object at 0x0000029103E95070>   类内存地址
# 给这个学生赋予名字和id
s1.ID = 1
s1.name = "张三"
# 测试一下，类的属性设置好没有
print(s1.ID,s1.name)
# 使用类行为
s1.study(45)   # 在使用类对象的过程中，类方法中参数self是不用传参，直接忽略它就行
s1.sleep()

print("--------------------------------------")
# 创建第二个对象
s2 = Students()
s2.sleep()

# 总结：类创建好后，不能直接通过类名去进行使用，因为类是一个模版，我们要使用类中的属性和行为，其实是需要去根据类创建一个对象，
#      然后通过类对象，去调用属性和行为的。

# 疑问：老师，模版和模块有啥区别？
# 答：模块指的是一个py文件，模版中指的是类。


# 1、帮助我们存储数据，并且由于类中具有很多的属性，他的数据存储灵活性会非常高

"""
三、如何使用类？
语法 ： 变量 = 类名()

四、什么是对象？
根据类创建的实例，叫做对象。

"""


"""
总结：
什么是类？
类本质是现实生活中的一个概念，我们对于生活中具有相同属性和行为的事务的划分，称之为类，比如说人类，学生类，动物类....
由于生活中有类概念，而作为为了解决生活中问题的程序，他也有类的概念，并且根据类概念衍生出了一个编程思想，就是马上会讲到的面向对象思想。

什么是对象？
当我们在编程中，通过特定的语法去创建好一个类之后，这个类是无法直接被使用的，因为这个类只是一个模版，
如果要使用的话，必须根据特定的语法，去用这个类去创建一个对象，之后再通过对象去使用属性和行为，这个属于和行为其实最终是针对于对象的。
"""
