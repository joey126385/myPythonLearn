# 由于需求一的实现代码比较多，为了我们在实现需求二的时候，不影响到需求一代码，我们可以将其封装成一个函数，然后调用其实现需求二
def yzm():
    # 导入随机工具包（Python自带）
    import random
    # = 号是赋值符号，用于将右边的值保存到左边变量
    # = 右边代码意思是，通过随机工具包中一个名为randint的工具，获取100000 到 999999 中的一个随机数
    yanZhenMa = random.randint(100000,999999)
    # 打印得到的随机数【在实际应用中，肯定是不能打印验证码的，这个打印语句得注释或删除】
    print(yanZhenMa)

    # 接受用户输入的内容，并保存到 user_input 变量中
    user_input = int(input("请填入正确的验证码："))
    # 注意，input函数能够接受用户输入的内容，但是它会将这个内容默认转为字符串类型。
    # 【下面的打印语句也是测试代码，在实际使用中得注释或删除】
    print(f"测试参数：\n系统生成的验证码是：{yanZhenMa}\n用户输入的验证码是：{user_input}")
    # 需求一：结合以上两段代码，实现验证用户输入的验证码是否正确的功能
    if user_input == yanZhenMa:
        print("验证码正确，即将登录！")
        return 1       # 返回验证码校验状态
    else:
        print("验证码错误，请重新输入！")
        return 0       # 返回验证码校验状态

x = 0      # 声明一个变量，用于记录失败次数
# 需求2：在需求1实现的基础上，叠加循环，实现 给用户三次输入错误的机会，如果三次机会用完都没有输入正确，则提示"机器已锁死，请明日再试！"
while True:
    if x >= 3:    # 当x中记录的值是 >或者=3的情况下，就退出循环
        print("--------------------------机器已锁死，请明日再试！")
        break
    res = yzm()      # 调用yzm函数可以得到返回的 验证码校验结果
    if res == 1:
        break
    x = x + 1      # 在这里实现每循环一次记录一次